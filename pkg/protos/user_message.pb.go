// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user_message.proto

/*
Package protos is a generated protocol buffer package.

It is generated from these files:
	user_message.proto

It has these top-level messages:
	SqlRequest
	SqlResponse
	Row
	Column
*/
package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/wrappers"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SqlRequest struct {
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Sql string `protobuf:"bytes,2,opt,name=sql" json:"sql,omitempty"`
}

func (m *SqlRequest) Reset()                    { *m = SqlRequest{} }
func (m *SqlRequest) String() string            { return proto.CompactTextString(m) }
func (*SqlRequest) ProtoMessage()               {}
func (*SqlRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *SqlRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *SqlRequest) GetSql() string {
	if m != nil {
		return m.Sql
	}
	return ""
}

type SqlResponse struct {
	Rows []*Row `protobuf:"bytes,1,rep,name=rows" json:"rows,omitempty"`
}

func (m *SqlResponse) Reset()                    { *m = SqlResponse{} }
func (m *SqlResponse) String() string            { return proto.CompactTextString(m) }
func (*SqlResponse) ProtoMessage()               {}
func (*SqlResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *SqlResponse) GetRows() []*Row {
	if m != nil {
		return m.Rows
	}
	return nil
}

type Row struct {
	Columns []*Column `protobuf:"bytes,1,rep,name=columns" json:"columns,omitempty"`
}

func (m *Row) Reset()                    { *m = Row{} }
func (m *Row) String() string            { return proto.CompactTextString(m) }
func (*Row) ProtoMessage()               {}
func (*Row) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Row) GetColumns() []*Column {
	if m != nil {
		return m.Columns
	}
	return nil
}

type Column struct {
	Value *google_protobuf.StringValue `protobuf:"bytes,1,opt,name=value" json:"value,omitempty"`
}

func (m *Column) Reset()                    { *m = Column{} }
func (m *Column) String() string            { return proto.CompactTextString(m) }
func (*Column) ProtoMessage()               {}
func (*Column) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Column) GetValue() *google_protobuf.StringValue {
	if m != nil {
		return m.Value
	}
	return nil
}

func init() {
	proto.RegisterType((*SqlRequest)(nil), "protos.SqlRequest")
	proto.RegisterType((*SqlResponse)(nil), "protos.SqlResponse")
	proto.RegisterType((*Row)(nil), "protos.Row")
	proto.RegisterType((*Column)(nil), "protos.Column")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for UserMessage service

type UserMessageClient interface {
	SendSql(ctx context.Context, in *SqlRequest, opts ...grpc.CallOption) (*SqlResponse, error)
}

type userMessageClient struct {
	cc *grpc.ClientConn
}

func NewUserMessageClient(cc *grpc.ClientConn) UserMessageClient {
	return &userMessageClient{cc}
}

func (c *userMessageClient) SendSql(ctx context.Context, in *SqlRequest, opts ...grpc.CallOption) (*SqlResponse, error) {
	out := new(SqlResponse)
	err := grpc.Invoke(ctx, "/protos.UserMessage/SendSql", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for UserMessage service

type UserMessageServer interface {
	SendSql(context.Context, *SqlRequest) (*SqlResponse, error)
}

func RegisterUserMessageServer(s *grpc.Server, srv UserMessageServer) {
	s.RegisterService(&_UserMessage_serviceDesc, srv)
}

func _UserMessage_SendSql_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SqlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserMessageServer).SendSql(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.UserMessage/SendSql",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserMessageServer).SendSql(ctx, req.(*SqlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserMessage_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.UserMessage",
	HandlerType: (*UserMessageServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendSql",
			Handler:    _UserMessage_SendSql_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user_message.proto",
}

func init() { proto.RegisterFile("user_message.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 239 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0xcf, 0x4b, 0xc4, 0x30,
	0x10, 0x85, 0xad, 0xd5, 0x5d, 0x9c, 0xc0, 0x22, 0xf1, 0x52, 0x16, 0xc1, 0x25, 0xa7, 0x9e, 0xa2,
	0x54, 0x8f, 0xde, 0xf6, 0xec, 0x25, 0x45, 0xaf, 0xd2, 0xd5, 0xb1, 0x88, 0x69, 0xa7, 0xc9, 0x34,
	0x16, 0xff, 0x7b, 0x69, 0x62, 0x91, 0x3d, 0x25, 0x7c, 0xef, 0xe5, 0xc7, 0x37, 0x20, 0x03, 0xa3,
	0x7f, 0xed, 0x90, 0xb9, 0x69, 0x51, 0x0f, 0x9e, 0x46, 0x92, 0xab, 0xb8, 0xf0, 0x76, 0x33, 0xf9,
	0x66, 0x18, 0xd0, 0x73, 0xe2, 0xea, 0x0e, 0xa0, 0x76, 0xd6, 0xa0, 0x0b, 0xc8, 0xa3, 0xbc, 0x84,
	0xfc, 0x0b, 0x7f, 0x8a, 0x6c, 0x97, 0x95, 0x17, 0x66, 0xde, 0xce, 0x84, 0x9d, 0x2d, 0x4e, 0x13,
	0x61, 0x67, 0x95, 0x06, 0x11, 0x4f, 0xf0, 0x40, 0x3d, 0xa3, 0xbc, 0x81, 0x33, 0x4f, 0x13, 0x17,
	0xd9, 0x2e, 0x2f, 0x45, 0x25, 0xd2, 0xb5, 0xac, 0x0d, 0x4d, 0x26, 0x06, 0xea, 0x16, 0x72, 0x43,
	0x93, 0x2c, 0x61, 0xfd, 0x46, 0x36, 0x74, 0xfd, 0x52, 0xdd, 0x2c, 0xd5, 0x7d, 0xc4, 0x66, 0x89,
	0xd5, 0x23, 0xac, 0x12, 0x92, 0x15, 0x9c, 0x7f, 0x37, 0x36, 0x60, 0xfc, 0x90, 0xa8, 0xae, 0x75,
	0x4b, 0xd4, 0xda, 0x3f, 0xa5, 0x43, 0xf8, 0xd0, 0xf5, 0xe8, 0x3f, 0xfb, 0xf6, 0x65, 0xee, 0x98,
	0x54, 0xad, 0xf6, 0x20, 0x9e, 0x19, 0xfd, 0x53, 0xb2, 0x97, 0x0f, 0xb0, 0xae, 0xb1, 0x7f, 0xaf,
	0x9d, 0x95, 0x72, 0x79, 0xf0, 0x5f, 0x78, 0x7b, 0x75, 0xc4, 0x92, 0x92, 0x3a, 0x39, 0xa4, 0x69,
	0xdd, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0xda, 0xb3, 0x3f, 0x2c, 0x4a, 0x01, 0x00, 0x00,
}
